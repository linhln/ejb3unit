                                    ------
                                    Overview to Ejb3Unit
                                    ------
				    Fabian Bauschulte, Daniel Wiese
                                    ------
                                    2007
					


Quick Overview
  
  Ejb3Unit provides three different test categories: Entity bean test, Session bean test and Mocked session bean test.

*  1. <<{{{Entity-Bean.html}Entity bean test}}>>
   
  You can create and test entity beans outside the container.
    
    * Fully automated test
      
      * Entity beans are randomly (or customized) written against and read from an in memory database (or against a database you may specify). This can easily be parametrizied to your own needs. 

      * <equals()> and <hashCode()> methods implementations of your Entity beans are checked automatically. 
      
      * Nullable fields are tested.
    
      * Possible data truncations or possible schema errors will be checked.

    * Manual test
     
      * Of course you can add manual tests if you like
    
   * Relations: OneToMany and ManyToOne supported
      
      * With Ejb3Unit it’s possible to Test this beans AND the relations (in a non transitive way!).
    
    * Limitations:  
      
        * ManyToMany relations, OneToOne relations and unidirectional relationships are curently not supported. For this or complex scenarios you can use the "PoJoFixture" which setups the infrastructure and gives you access to an
entity manager which allows to persist your own object graph.

	* Currently only the access type 'field' is supported (annotation are declared on the field). The access type 'property' (annotation are declared on the methods) is currently not supported.

*  2. <<{{{Session-Bean.html}Session bean test}}>>

   This test represents an integration test, if you like to <test arts of your system in collaboration>.
    
    * The session bean under test and all referenced session beans are created. 
    
    * Also a DataSource, EntityManager and a SessionContext are injected.

    * The in memory database is initialized with predefined data using comma separated value files. Each .csv file represents data for one table (using the mapping definitions form the corresponding entity bean). The testdata can also be defined directly  in the testclass if this is necessary.

*  3. <<{{{Mocked-Session-Bean.html}Mocked session bean test}}>>
   
  A session bean class is created and for all dependencies resolver by injecting mock objects. This <test allows testing of an Session bean in isolation>.

    * A mock object is a substitute for a concrete implementation (please see {{{http://www.jmock.org/}JMock}} for details). 

    * All EJB 3.0 dependency injection attributes are supported. 


   